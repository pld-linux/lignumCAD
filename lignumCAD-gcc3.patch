--- lignumCAD/vectoralgebra.h.orig	Mon Oct 28 19:28:55 2002
+++ lignumCAD/vectoralgebra.h	Tue Jul 22 16:02:26 2003
@@ -65,7 +65,7 @@
   };
 
 #ifndef LC_NO_DEBUG
-  inline ostream& operator<< ( ostream& o, const Space2D::Vector v )
+  inline std::ostream& operator<< ( std::ostream& o, const Space2D::Vector v )
   {
     return o << v[Space2D::X] << ", " << v[Space2D::Y];
   }
@@ -159,7 +159,7 @@
   };
 
 #ifndef LC_NO_DEBUG
-  inline ostream& operator<< ( ostream& o, const Space2D::Point p )
+  inline std::ostream& operator<< ( std::ostream& o, const Space2D::Point p )
   {
     return o << p[Space2D::X] << ", " << p[Space2D::Y];
   }
@@ -253,7 +253,7 @@
   };
 
 #ifndef LC_NO_DEBUG
-  inline ostream& operator<< ( ostream& o, const Space3D::Vector v )
+  inline std::ostream& operator<< ( std::ostream& o, const Space3D::Vector v )
   {
     return o << v[Space3D::X] << ", " << v[Space3D::Y] << ", " << v[Space3D::Z];
   }
@@ -347,7 +347,7 @@
   };
 
 #ifndef LC_NO_DEBUG
-  inline ostream& operator<< ( ostream& o, const Space3D::Point p )
+  inline std::ostream& operator<< ( std::ostream& o, const Space3D::Point p )
   {
     return o << p[Space3D::X] << ", " << p[Space3D::Y] << ", " << p[Space3D::Z];
   }
@@ -563,14 +563,14 @@
     return c;
   }
 
-  inline ostream& operator<< ( ostream& o, const Matrix& m )
+  inline std::ostream& operator<< ( std::ostream& o, const Matrix& m )
   {
     o << "[[ " << m[X][X] << ", " << m[Y][X] << ", " << m[Z][X] << ", " << m[W][X]
-      << "]," << endl;
+      << "]," << std::endl;
     o << " [ " << m[X][Y] << ", " << m[Y][Y] << ", " << m[Z][Y] << ", " << m[W][Y]
-      << "]," << endl;
+      << "]," << std::endl;
     o << " [ " << m[X][Z] << ", " << m[Y][Z] << ", " << m[Z][Z] << ", " << m[W][Z]
-      << "]]" << endl;
+      << "]]" << std::endl;
     return o;
   }
 } // End of Space3D namespace
--- lignumCAD/selectednames.h.orig	Mon Oct 28 20:00:25 2002
+++ lignumCAD/selectednames.h	Tue Jul 22 16:06:22 2003
@@ -36,7 +36,7 @@
  * There seems to be little reason to hide the nature of this structure
  * since every thing is essentially an automatic variable.
  */
-class SelectedNames : public multimap< GLfloat, vector< GLuint > >
+class SelectedNames : public std::multimap< GLfloat, std::vector< GLuint > >
 {
 public:
   /*!
@@ -52,7 +52,7 @@
     GLfloat z0 = (GLfloat) (*hit_record++) / 0x7fffffff;
     hit_record++;		// For now, ignore the z far value.
     iterator record =
-      insert( pair< GLfloat, vector< GLuint > >( z0, vector< GLuint >( names ) ) );
+      insert( std::pair< GLfloat, std::vector< GLuint > >( z0, std::vector< GLuint >( names ) ) );
     for ( GLuint j = 0; j < names; j++ )
       (*record).second[j] = *hit_record++;
   }
@@ -114,20 +114,20 @@
   return equal;
 }
 
-inline ostream& operator<< ( ostream& o, const SelectedNames& sn )
+inline std::ostream& operator<< ( std::ostream& o, const SelectedNames& sn )
 {
   if ( sn.empty() )
-    return o << "empty" << endl;
+    return o << "empty" << std::endl;
 
   SelectedNames::const_iterator i = sn.begin();
 
   for ( ; i != sn.end(); ++i ) {
     o << "Depth: " << (*i).first << ": ";
-    vector<GLuint>::const_iterator j = (*i).second.begin();
+    std::vector<GLuint>::const_iterator j = (*i).second.begin();
     for ( ; j != (*i).second.end(); ++j ) {
       o << (*j) << " ";
     }
-    o << endl;
+    o << std::endl;
   }
 
   return o;
--- lignumCAD/curve.h.orig	Fri Oct 18 22:44:27 2002
+++ lignumCAD/curve.h	Tue Jul 22 16:07:09 2003
@@ -109,11 +109,11 @@
      * \param o C++ output stream.
      * \return reference to output stream.
      */
-    virtual ostream& edit ( ostream& o ) const = 0;
+    virtual std::ostream& edit ( std::ostream& o ) const = 0;
 #endif
   };
 #ifndef LC_NO_DEBUG
-  inline ostream& operator<< ( ostream& o, const Curve& c )
+  inline std::ostream& operator<< ( std::ostream& o, const Curve& c )
   {
     return c.edit( o );
   }
--- lignumCAD/figureview.h.orig	Wed Nov 13 20:36:06 2002
+++ lignumCAD/figureview.h	Tue Jul 22 16:07:58 2003
@@ -69,24 +69,24 @@
    * \param entity type of entity currently being sought.
    * \return selection string representation.
    */
-  virtual QString selectionText ( const vector<GLuint>& selection_name,
+  virtual QString selectionText ( const std::vector<GLuint>& selection_name,
 				  SelectionEntity entity ) const = 0;
 
   //  virtual FigureBase* figure ( void ) const = 0;
   virtual CreateObject* memento ( void ) = 0;
 
   virtual View* lookup ( QStringList& path_components ) const = 0;
-  virtual void lookup ( QValueVector<uint>& id_path, vector<GLuint>& name_path ) const = 0;
+  virtual void lookup ( QValueVector<uint>& id_path, std::vector<GLuint>& name_path ) const = 0;
 
   bool isHighlighted ( void ) const { return highlighted_; }
   void setHighlighted ( bool highlight );
   virtual void setHighlighted ( bool highlight, SelectionEntity entity,
-				const vector<GLuint>& items ) = 0;
+				const std::vector<GLuint>& items ) = 0;
 
   bool isActivated ( void ) const { return activated_; }
   void setActivated ( bool activate );
   virtual void setActivated ( bool activate, SelectionEntity entity,
-			      const vector<GLuint>& items ) = 0;
+			      const std::vector<GLuint>& items ) = 0;
 
   virtual InputObject* createInput ( void ) = 0;
   virtual InputObject* modifyInput ( void ) = 0;
@@ -130,7 +130,7 @@
     virtual Curve* geometry ( GLuint /*selection_name*/ ) const { return 0; }
 
     // Not implemented in 2D...
-    void lookup ( QValueVector<uint>& /*id_path*/, vector<GLuint>& /*name_path*/ )
+    void lookup ( QValueVector<uint>& /*id_path*/, std::vector<GLuint>& /*name_path*/ )
       const
     {}
   };
--- lignumCAD/pageview.h.orig	Sun Dec  8 20:21:36 2002
+++ lignumCAD/pageview.h	Tue Jul 22 16:08:38 2003
@@ -139,7 +139,7 @@
   void paste ( void );
 
   virtual View* lookup ( QStringList& path_components ) const;
-  virtual vector<GLuint> lookup ( QValueVector<uint>& id_path ) const;
+  virtual std::vector<GLuint> lookup ( QValueVector<uint>& id_path ) const;
 
   /*!
    * (Temporarily) turn off any highlights or activations
@@ -207,9 +207,9 @@
   virtual void cancelOperation ( void ) = 0;
 
   void activateFigure ( FigureViewBase* figure_view );
-  void activateFigure ( const vector<GLuint>& selection_name );
+  void activateFigure ( const std::vector<GLuint>& selection_name );
   void deactivateFigure( GLuint figure, GLuint geometry );
-  void deactivateFigure ( const vector<GLuint>& selection_name );
+  void deactivateFigure ( const std::vector<GLuint>& selection_name );
   /*!
    * Check to make sure the new name is not used by another figure
    * of the same type on the page. Displays a modal dialog if the
diff -ur -urp lignumCAD/annotationview.cpp ../lignumCAD-1/annotationview.cpp
--- lignumCAD/annotationview.cpp	2002-12-03 17:04:11.000000000 +0100
+++ ../lignumCAD-1/annotationview.cpp	2010-07-09 01:05:46.000000000 +0200
@@ -850,7 +850,7 @@ namespace Space2D {
     return annotation_->dbURL();
   }
 
-  QString AnnotationView::selectionText ( const vector<GLuint>& /*selection_name*/,
+  QString AnnotationView::selectionText ( const std::vector<GLuint>& /*selection_name*/,
 					  SelectionEntity /*entity*/ ) const
   {
     return annotation_->name();
@@ -858,14 +858,14 @@ namespace Space2D {
 
 
   void AnnotationView::setHighlighted ( bool highlight, SelectionEntity entity,
-					const vector<GLuint>& /*items*/ )
+					const std::vector<GLuint>& /*items*/ )
   {
     if ( entity == FIGURE )
       FigureViewBase::setHighlighted( highlight );
   }
 
   void AnnotationView::setActivated ( bool activate, SelectionEntity entity,
-				      const vector<GLuint>& /*items*/ )
+				      const std::vector<GLuint>& /*items*/ )
   {
     if ( entity == FIGURE )
       FigureViewBase::setActivated( activate );
diff -ur -urp lignumCAD/annotationview.h ../lignumCAD-1/annotationview.h
--- lignumCAD/annotationview.h	2002-11-20 16:30:39.000000000 +0100
+++ ../lignumCAD-1/annotationview.h	2010-05-29 16:28:09.000000000 +0200
@@ -297,7 +297,7 @@ namespace Space2D {
      * \param entity entity selected for in view.
      * \return string representing selection.
      */
-    QString selectionText ( const vector<GLuint>& selection_name,
+    QString selectionText ( const std::vector<GLuint>& selection_name,
 			    SelectionEntity entity ) const;
     //! \return 0: has no subcomponents
     View* lookup ( QStringList& /*path_components*/ ) const { return 0; }
@@ -308,7 +308,7 @@ namespace Space2D {
      * \param item OpenGL selection names of subcomponents (none here).
      */
     void setHighlighted ( bool highlight, SelectionEntity entity,
-			  const vector<GLuint>& items );
+			  const std::vector<GLuint>& items );
     /*!
      * Set all the designated items to the given activation mode.
      * \param activate new activation mode.
@@ -316,7 +316,7 @@ namespace Space2D {
      * \param item OpenGL selection names of subcomponents (none here).
      */
     void setActivated ( bool activate, SelectionEntity entity,
-			const vector<GLuint>& items );
+			const std::vector<GLuint>& items );
     //! \return 0: annotations cannot be dimensioned.
     uint dimensionPickCount ( void ) const { return 0; }
     //! Does nothing in this context.
@@ -564,7 +564,7 @@ namespace Space2D {
     //! lookup via OpenGL selection name.
     QIntDict< GraphicsView > annotation_objects_;
     //! Convert a handle selection name into a modification action.
-    map< int, lC::ValidDelta( AnnotationView::* ) ( const Point&, Point& )> adjustments_;
+    std::map< int, lC::ValidDelta( AnnotationView::* ) ( const Point&, Point& )> adjustments_;
     //! The annotation text editing dialog.
     static AnnotationInfoDialog* annotation_info_dialog_;
   };
diff -ur -urp lignumCAD/assemblyview.cpp ../lignumCAD-1/assemblyview.cpp
--- lignumCAD/assemblyview.cpp	2003-01-03 16:28:09.000000000 +0100
+++ ../lignumCAD-1/assemblyview.cpp	2010-05-29 18:56:20.000000000 +0200
@@ -2041,7 +2041,7 @@ void AssemblyView::constraintAdded ( con
   updateConstraintLabel();
 }
 
-  inline QString namePathToString ( const vector<GLuint>& ID )
+  inline QString namePathToString ( const std::vector<GLuint>& ID )
   {
     QString id_string;
 
diff -ur -urp lignumCAD/centerlineview.h ../lignumCAD-1/centerlineview.h
--- lignumCAD/centerlineview.h	2002-11-20 21:13:28.000000000 +0100
+++ ../lignumCAD-1/centerlineview.h	2010-05-29 16:27:32.000000000 +0200
@@ -151,14 +151,14 @@ namespace Space2D {
     QString name ( void ) const;
     QString type ( void ) const;
     DBURL dbURL ( void ) const;
-    QString selectionText ( const vector<GLuint>& selection_name,
+    QString selectionText ( const std::vector<GLuint>& selection_name,
 			    SelectionEntity entity ) const;
     View* lookup ( QStringList& path_components ) const;
 
     void setHighlighted ( bool highlight, SelectionEntity entity,
-			  const vector<GLuint>& items );
+			  const std::vector<GLuint>& items );
     void setActivated( bool activate, SelectionEntity entity,
-		       const vector<GLuint>& items );
+		       const std::vector<GLuint>& items );
 
     InputObject* createInput ( void ) { return &create_input_; }
     InputObject* modifyInput ( void );
diff -ur -urp lignumCAD/designbookview.cpp ../lignumCAD-1/designbookview.cpp
--- lignumCAD/designbookview.cpp	2002-12-13 17:20:40.000000000 +0100
+++ ../lignumCAD-1/designbookview.cpp	2010-05-29 16:23:32.000000000 +0200
@@ -1322,18 +1322,18 @@ View* DesignBookView::lookup ( const DBU
 
 // Find the OpenGL selection name path for a given id path.
 
-vector<GLuint> DesignBookView::lookup ( const QValueVector<uint>& id_path ) const
+std::vector<GLuint> DesignBookView::lookup ( const QValueVector<uint>& id_path ) const
 {
   QValueVector<uint> my_path = id_path;
 
   if ( my_path.empty() || my_path[0] != model_->id() )
-    return vector<GLuint>();	// Not this model! Really an error...
+    return std::vector<GLuint>();	// Not this model! Really an error...
 
   // Pop the model id off the list
   my_path.erase( my_path.begin() );
 
   if ( my_path.empty() )
-    return vector<GLuint>();	// Really an error...
+    return std::vector<GLuint>();	// Really an error...
 #if 0
   QMap<uint,PageBase*>::const_iterator p = pages_.find( my_path[0] );
 
@@ -1352,7 +1352,7 @@ vector<GLuint> DesignBookView::lookup ( 
     }
   }
 #endif
-  return vector<GLuint>();	// Really an error...
+  return std::vector<GLuint>();	// Really an error...
 }
 
 // Replace the current model with a new one.
diff -ur -urp lignumCAD/designbookview.h ../lignumCAD-1/designbookview.h
--- lignumCAD/designbookview.h	2002-12-09 20:36:28.000000000 +0100
+++ ../lignumCAD-1/designbookview.h	2010-05-29 16:13:27.000000000 +0200
@@ -113,7 +113,7 @@ public:
   QListViewItem* previousItem ( uint id ) const;
   void deletePage ( PageView* page_view );
   View* lookup ( const DBURL& db_url );
-  vector<GLuint> lookup ( const QValueVector<uint>& id_path ) const;
+  std::vector<GLuint> lookup ( const QValueVector<uint>& id_path ) const;
 
   void modelChanged ( bool status );
 
diff -ur -urp lignumCAD/gl2ps_qt.cpp ../lignumCAD-1/gl2ps_qt.cpp
--- lignumCAD/gl2ps_qt.cpp	2002-12-05 15:50:56.000000000 +0100
+++ ../lignumCAD-1/gl2ps_qt.cpp	2010-07-09 00:30:46.000000000 +0200
@@ -127,7 +127,7 @@ extern "C" {
       break;
     case GL2PS_LINE :
       if(gl2ps.shade){
-	cout << "somehow, we got a shaded line anyway" << endl;
+	std::cout << "somehow, we got a shaded line anyway" << endl;
       }
       else{
 	QColor color( F2CI( prim->verts[0].rgba[0] ),
@@ -167,7 +167,7 @@ extern "C" {
       break;
     case GL2PS_TRIANGLE :
       if(gl2ps.shade){
-	cout << "somehow, we got a shaded triangle anyway" << endl;
+	std::cout << "somehow, we got a shaded triangle anyway" << endl;
       }
       else{
 #if 0
diff -ur -urp lignumCAD/lcdebug.h ../lignumCAD-1/lcdebug.h
--- lignumCAD/lcdebug.h	2002-12-13 13:12:55.000000000 +0100
+++ ../lignumCAD-1/lcdebug.h	2010-07-09 01:10:52.000000000 +0200
@@ -130,7 +130,7 @@ inline ostream& operator<< ( ostream& o,
 }
 #endif // _TopAbs_ShapeEnum_HeaderFile
 
-inline ostream& operator<< ( ostream& o, const QValueVector<uint>& id_path )
+inline std::ostream& operator<< ( std::ostream& o, const QValueVector<uint>& id_path )
 {
   if ( id_path.size() > 0 ) {
     o << id_path[0];
diff -ur -urp lignumCAD/line.h ../lignumCAD-1/line.h
--- lignumCAD/line.h	2002-10-21 13:26:34.000000000 +0200
+++ ../lignumCAD-1/line.h	2010-05-29 19:24:51.000000000 +0200
@@ -59,7 +59,7 @@ namespace Space2D {
     Vector normal ( void ) const;
 
     virtual bool dependsOn( const Line* line ) const = 0;
-    virtual ostream& edit ( ostream& o ) const = 0;
+    virtual std::ostream& edit ( std::ostream& o ) const = 0;
 
   signals:
     void destroyedLine ();
@@ -66,7 +66,7 @@ namespace Space2D {
     //    void modifiedPosition ();
   };
 
-  ostream& operator<< ( ostream& o, Line* line );
+  std::ostream& operator<< ( std::ostream& o, Line* line );
 
   class Axis : public Line {
     Q_OBJECT
@@ -77,7 +78,7 @@ namespace Space2D {
     ~Axis ( void ) {}
 
     bool dependsOn ( const Line* ) const { return false; }
-    ostream& edit ( ostream& ) const;
+    std::ostream& edit ( std::ostream& ) const;
 
     void write ( QDomElement& xml_rep ) const;
   };
@@ -104,7 +105,7 @@ namespace Space2D {
     virtual Point setPosition ( const Point& position ) = 0;
     virtual void referenceModified ( void ) = 0;
     virtual bool dependsOn ( const Line* ) const = 0;
-    virtual ostream& edit ( ostream& o ) const = 0;
+    virtual std::ostream& edit ( std::ostream& o ) const = 0;
     virtual QString detail ( void ) const = 0;
     virtual QString note ( void ) const = 0;
     virtual void write ( QDomElement& xml_rep ) const = 0;
@@ -160,7 +161,7 @@ namespace Space2D {
     void resolvedReference ( Line* reference );
     void referenceModified ( void ) {}
 
-    ostream& edit ( ostream& o ) const;
+    std::ostream& edit ( std::ostream& o ) const;
     QString detail ( void ) const;
     QString note ( void ) const { return QString::null; }
     void write ( QDomElement& xml_rep ) const;
@@ -201,7 +202,7 @@ namespace Space2D {
 
     void referenceModified ( void );
 
-    ostream& edit ( ostream& o ) const;
+    std::ostream& edit ( std::ostream& o ) const;
     QString detail ( void ) const;
     QString note ( void ) const { return QString::null; }
     void write ( QDomElement& xml_rep ) const;
@@ -243,7 +244,7 @@ namespace Space2D {
 
     void referenceModified ( void );
 
-    ostream& edit ( ostream& o ) const;
+    std::ostream& edit ( std::ostream& o ) const;
     QString detail ( void ) const;
     QString note ( void ) const;
     void write ( QDomElement& xml_rep ) const;
@@ -284,7 +285,7 @@ namespace Space2D {
       return constraint_->dependsOn( line );
     }
 
-    ostream& edit ( ostream& o ) const { return constraint_->edit( o ); }
+    std::ostream& edit ( std::ostream& o ) const { return constraint_->edit( o ); }
 
     QString detail ( void ) const;
     // This is an (optional) annotation of the dimension string.
@@ -343,7 +344,7 @@ namespace Space3D {
     Vector normal ( void ) const;
 
     bool dependsOn( const Line* /*line*/ ) const { return false; }
-    ostream& edit ( ostream& o ) const
+    std::ostream& edit ( std::ostream& o ) const
     { return o << "Line: " << "origin: " << o_ << ", direction: " << e_; }
 
     void write ( QDomElement& /*xml_rep*/ ) const { }
diff -ur -urp lignumCAD/ocsolid.h ../lignumCAD-1/ocsolid.h
--- lignumCAD/ocsolid.h	2002-11-21 15:59:21.000000000 +0100
+++ ../lignumCAD-1/ocsolid.h	2010-05-29 18:54:30.000000000 +0200
@@ -231,7 +231,7 @@ namespace Space3D {
      */
     QString faceName ( const TopoDS_Face& face ) const
     {
-      hash_map<TopoDS_Face,uint,lCShapeHasher>::const_iterator face_name;
+      __gnu_cxx::hash_map<TopoDS_Face,uint,lCShapeHasher>::const_iterator face_name;
 
       face_name = face_names_.find( face );
 
@@ -245,9 +245,9 @@ namespace Space3D {
      */
     const TopoDS_Face face ( const QString& name ) const
     {
-      pair<QString,uint> name_id = PartFactory::instance()->name( name );
+      std::pair<QString,uint> name_id = PartFactory::instance()->name( name );
 
-      hash_map<TopoDS_Face,uint,lCShapeHasher>::const_iterator face =
+      __gnu_cxx::hash_map<TopoDS_Face,uint,lCShapeHasher>::const_iterator face =
 	face_names_.begin();
 
       for ( ; face != face_names_.end(); ++face )
@@ -261,7 +261,7 @@ namespace Space3D {
      */
     const TopoDS_Face face ( uint id ) const
     {
-      hash_map<TopoDS_Face,uint,lCShapeHasher>::const_iterator face =
+      __gnu_cxx::hash_map<TopoDS_Face,uint,lCShapeHasher>::const_iterator face =
 	face_names_.begin();
       for ( ; face != face_names_.end(); ++face )
 	if ( (*face).second == id )
@@ -274,7 +274,7 @@ namespace Space3D {
      */
     uint faceID ( const QString& name ) const
     {
-      pair<QString,uint> name_id = PartFactory::instance()->name( name );
+      std::pair<QString,uint> name_id = PartFactory::instance()->name( name );
       return name_id.second;
     }
     /*!
@@ -282,7 +282,7 @@ namespace Space3D {
      */
     uint faceID ( const TopoDS_Face& face ) const
     {
-      hash_map<TopoDS_Face,uint,lCShapeHasher>::const_iterator f =
+      __gnu_cxx::hash_map<TopoDS_Face,uint,lCShapeHasher>::const_iterator f =
 	face_names_.find( face );
       if ( f != face_names_.end() )
 	return (*f).second;
@@ -297,11 +297,11 @@ namespace Space3D {
     void addResizeHandle ( uint id, const HandleData& handle );
 
     //! \return an iterator to the beginning of the list of handles.
-    map<uint, HandleData>::const_iterator handlesBegin ( void ) const
+    std::map<uint, HandleData>::const_iterator handlesBegin ( void ) const
     { return handles_.begin(); }
 
     //! \return an iterator to the end of the list of handles.
-    map<uint, HandleData>::const_iterator handlesEnd ( void ) const
+    std::map<uint, HandleData>::const_iterator handlesEnd ( void ) const
     { return handles_.end(); }
 
     /*!
@@ -321,11 +321,11 @@ namespace Space3D {
     void addParameter ( const QString& name, const Parameter& parameter );
 
     //! \return an iterator to the beginning of the list of parameters
-    map<QString, Parameter>::const_iterator parametersBegin ( void ) const
+    std::map<QString, Parameter>::const_iterator parametersBegin ( void ) const
     { return  parameters_.begin(); }
 
     //! \return an iterator to the end of the list of parameters
-    map<QString, Parameter>::const_iterator parametersEnd ( void ) const
+    std::map<QString, Parameter>::const_iterator parametersEnd ( void ) const
     { return  parameters_.end(); }
 
     /*!
@@ -345,11 +345,11 @@ namespace Space3D {
     void addDatum ( const QString& name, const ConstructionDatum* datum );
 
     //! \return an iterator to the beginning of the list of datums.
-    map<QString, const ConstructionDatum*>::const_iterator datumsBegin ( void) const
+    std::map<QString, const ConstructionDatum*>::const_iterator datumsBegin ( void) const
     { return datums_.begin(); }
 
     //! \return an iterator to the end of the list of datums.
-    map<QString, const ConstructionDatum*>::const_iterator datumsEnd ( void ) const
+    std::map<QString, const ConstructionDatum*>::const_iterator datumsEnd ( void ) const
     { return datums_.end(); }
 
     /*!
@@ -374,7 +374,7 @@ namespace Space3D {
      * Update some (or all) the solid parameters at one go.
      * \param parameters list of parameters to update.
      */
-    virtual void updateParameters ( const map<QString,double>& parameters ) = 0;
+    virtual void updateParameters ( const std::map<QString,double>& parameters ) = 0;
     /*!
      * Report an adjustment to the n-th handle.
      * \param id id of adjusted handle.
@@ -479,17 +479,17 @@ signals:
     gp_Ax2 grain_csys_;
 
     //! List of the resize handles supplied by this solid.
-    map<uint, HandleData> handles_;
+    std::map<uint, HandleData> handles_;
     //! List of dimensional parameters.
-    map<QString, Parameter> parameters_;
+    std::map<QString, Parameter> parameters_;
     //! List of construction datum used by this solid.
-    map<QString, const ConstructionDatum*> datums_;
+    std::map<QString, const ConstructionDatum*> datums_;
 
     //! The mapping the face data structures to their names.
-    hash_map< TopoDS_Face, uint, lCShapeHasher > face_names_;
+    __gnu_cxx::hash_map< TopoDS_Face, uint, lCShapeHasher > face_names_;
 
     //! The list of handles which are associated with each face.
-    map<QString, QValueVector<uint> > face_handles_;
+    std::map<QString, QValueVector<uint> > face_handles_;
 
     //! Is this necessary? (probably not...)
     static uint unique_index_;
@@ -534,7 +534,7 @@ signals:
      * Update some (or all) the solid parameters at one go.
      * \param parameters list of parameters to update.
      */
-    void updateParameters ( const map<QString,double>& parameters );
+    void updateParameters ( const std::map<QString,double>& parameters );
     /*!
      * Report an adjustment to the n-th handle.
      * \param id id of adjusted handle.
@@ -600,7 +600,7 @@ signals:
      * Update some (or all) the solid parameters at one go.
      * \param parameters list of parameters to update.
      */
-    void updateParameters ( const map<QString,double>& parameters );
+    void updateParameters ( const std::map<QString,double>& parameters );
     /*!
      * Report an adjustment to the n-th handle.
      * \param id id of adjusted handle.
@@ -665,7 +665,7 @@ signals:
      * Update some (or all) the solid parameters at one go.
      * \param parameters list of parameters to update.
      */
-    void updateParameters ( const map<QString,double>& parameters );
+    void updateParameters ( const std::map<QString,double>& parameters );
     /*!
      * Report an adjustment to the n-th handle.
      * \param id id of adjusted handle.
@@ -741,7 +741,7 @@ signals:
      * Update some (or all) the solid parameters at one go.
      * \param parameters list of parameters to update.
      */
-    void updateParameters ( const map<QString,double>& parameters );
+    void updateParameters ( const std::map<QString,double>& parameters );
     /*!
      * Report an adjustment to the n-th handle.
      * \param id id of adjusted handle.
@@ -816,7 +816,7 @@ signals:
      * Update some (or all) the solid parameters at one go.
      * \param parameters list of parameters to update.
      */
-    void updateParameters ( const map<QString,double>& parameters );
+    void updateParameters ( const std::map<QString,double>& parameters );
     /*!
      * Report an adjustment to the n-th handle.
      * \param id id of adjusted handle.
@@ -881,7 +881,7 @@ signals:
      * Update some (or all) the solid parameters at one go.
      * \param parameters list of parameters to update.
      */
-    void updateParameters ( const map<QString,double>& parameters );
+    void updateParameters ( const std::map<QString,double>& parameters );
     /*!
      * Report an adjustment to the n-th handle.
      * \param id id of adjusted handle.
diff -ur -urp lignumCAD/ocsolidview.h ../lignumCAD-1/ocsolidview.h
--- lignumCAD/ocsolidview.h	2002-11-22 13:37:27.000000000 +0100
+++ ../lignumCAD-1/ocsolidview.h	2010-05-29 18:17:32.000000000 +0200
@@ -70,7 +70,7 @@ namespace Space3D {
     OCSolid* solid_;
     OCSolidView* solid_view_;
 
-    map< QString, double > old_parameters_;
+    std::map< QString, double > old_parameters_;
 
     GLuint drag_handle_;
     Point start_pnt_;
@@ -130,19 +130,19 @@ namespace Space3D {
      * \param entity entity selected for in view.
      * \return string representing selection.
      */
-    QString selectionText ( const vector<GLuint>& selection_name,
+    QString selectionText ( const std::vector<GLuint>& selection_name,
 			    SelectionEntity entity ) const;
 
     View* lookup ( QStringList& /*path_components*/ ) const
     { return 0; }
-    void lookup ( QValueVector<uint>& /*id_path*/, vector<GLuint>& /*name_path*/ )
+    void lookup ( QValueVector<uint>& /*id_path*/, std::vector<GLuint>& /*name_path*/ )
       const
     {}
 
     void setHighlighted ( bool highlight, SelectionEntity entity,
-			  const vector<GLuint>& items );
+			  const std::vector<GLuint>& items );
     void setActivated( bool activate, SelectionEntity entity,
-		       const vector<GLuint>& items );
+		       const std::vector<GLuint>& items );
 
     InputObject* createInput ( void ) { return 0; }
     InputObject* modifyInput ( void ) { return &modify_input_; }
diff -ur -urp lignumCAD/oglpaintdevice.cpp ../lignumCAD-1/oglpaintdevice.cpp
--- lignumCAD/oglpaintdevice.cpp	2002-12-05 15:50:37.000000000 +0100
+++ ../lignumCAD-1/oglpaintdevice.cpp	2010-07-09 01:10:19.000000000 +0200
@@ -27,17 +27,17 @@
 #include "OGLFT.h"
 #include "oglpaintdevice.h"
 
-ostream& operator<< ( ostream& o, const QPoint& p )
+std::ostream& operator<< ( std::ostream& o, const QPoint& p )
 {
   return o << "[" << p.x() << ", " << p.y() << "]";
 }
 
-ostream& operator<< ( ostream& o, const QColor& c )
+std::ostream& operator<< ( std::ostream& o, const QColor& c )
 {
   return o << "[" << c.red() << ", " << c.green() << ", " << c.blue() << "]";
 }
 
-ostream& operator<< ( ostream& o, const QBrush& b )
+std::ostream& operator<< ( std::ostream& o, const QBrush& b )
 {
   o << "style ";
   switch ( b.style() ) {
@@ -51,7 +52,7 @@ ostream& operator<< ( ostream& o, const 
   return o << ", color " << b.color();
 }
 
-ostream& operator<< ( ostream& o, const QPen& p )
+std::ostream& operator<< ( std::ostream& o, const QPen& p )
 {
   o << "style ";
   switch( p.style() ) {
@@ -69,17 +70,17 @@ ostream& operator<< ( ostream& o, const 
   return o << ", color " << p.color() << ", width " << p.width();
 }
 
-ostream& operator<< ( ostream& o, const QFont& f )
+std::ostream& operator<< ( std::ostream& o, const QFont& f )
 {
   return o << f.rawName().latin1();
 }
 
-ostream& operator<< ( ostream& o, const QRect& r )
+std::ostream& operator<< ( std::ostream& o, const QRect& r )
 {
   return o << r.left() << ", " << r.top() << "; " << r.right() << ", " << r.bottom();
 }
 
-ostream& operator<< ( ostream& o, const QRegion& r )
+std::ostream& operator<< ( std::ostream& o, const QRegion& r )
 {
   QMemArray<QRect> rects( r.rects() );
   for ( uint i = 0; i < rects.size(); i++ )
@@ -87,7 +88,7 @@ ostream& operator<< ( ostream& o, const 
   return o;
 }
 
-ostream& operator<< ( ostream& o, const QWMatrix& m )
+std::ostream& operator<< ( std::ostream& o, const QWMatrix& m )
 {
   o << "\t" << m.m11() << ", " << m.m12() << ": " << m.dx() << endl;
   o << "\t" << m.m21() << ", " << m.m22() << ": " << m.dy() << endl;
diff -ur -urp lignumCAD/pageview.cpp ../lignumCAD-1/pageview.cpp
--- lignumCAD/pageview.cpp	2002-12-08 20:18:16.000000000 +0100
+++ ../lignumCAD-1/pageview.cpp	2010-05-29 19:10:12.000000000 +0200
@@ -365,9 +365,9 @@ View* PageView::lookup ( QStringList& pa
 
 // Lookup the OpenGL selection name path for the given object.
 
-vector<GLuint> PageView::lookup ( QValueVector<uint>& id_path ) const
+std::vector<GLuint> PageView::lookup ( QValueVector<uint>& id_path ) const
 {
-  vector<GLuint> name_path;
+  std::vector<GLuint> name_path;
 
   QPtrListIterator< FigureViewBase > fv( figure_views_ );
 
@@ -652,7 +652,7 @@ void PageView::activateFigure ( FigureVi
   deactivateFigures();
 
   SelectedNames::iterator f =
-    activated_.insert( pair<GLfloat, vector<GLuint> >( 0., vector<GLuint>(1) ) );
+    activated_.insert( std::pair<GLfloat, std::vector<GLuint> >( 0., std::vector<GLuint>(1) ) );
   (*f).second[0] = figure_view->selectionName();
   
   figure_view->setActivated( true, selectionType().entity_, (*f).second );
@@ -666,9 +666,9 @@ void PageView::activateFigure ( FigureVi
 
 // Programmatically activate (pick, actually) the figure given by the GL path.
 
-void PageView::activateFigure ( const vector<GLuint>& selection_name )
+void PageView::activateFigure ( const std::vector<GLuint>& selection_name )
 {
-  activated_.insert( pair<GLfloat, vector<GLuint> >( 0., selection_name ) );
+  activated_.insert( std::pair<GLfloat, std::vector<GLuint> >( 0., selection_name ) );
 
   FigureViewBase* figure_view = figure_selection_names_[ selection_name[0] ];
   
@@ -691,7 +691,7 @@ void PageView::deactivateFigure ( GLuint
 
   for ( ; f != activated_.end(); ++f ) {
     if ( (*f).second[0] == figure ) {
-      vector<GLuint>::const_iterator g = find( (*f).second.begin(),
+      std::vector<GLuint>::const_iterator g = find( (*f).second.begin(),
 					       (*f).second.end(), geometry );
       if ( g != (*f).second.end() ) {
 	figure_selection_names_[ (*f).second[0] ]->setActivated( false,
@@ -714,7 +714,7 @@ void PageView::deactivateFigure ( GLuint
 
 // Turn off the given figure (geometry, etc...)
 
-void PageView::deactivateFigure ( const vector<GLuint>& selection_name )
+void PageView::deactivateFigure ( const std::vector<GLuint>& selection_name )
 {
   if ( selection_name.empty() ) return;
 
diff -ur -urp lignumCAD/part.cpp ../lignumCAD-1/part.cpp
--- lignumCAD/part.cpp	2002-12-02 23:59:54.000000000 +0100
+++ ../lignumCAD-1/part.cpp	2010-05-29 19:08:00.000000000 +0200
@@ -331,24 +331,24 @@ Space3D::OCSolid* PartFactory::create ( 
 
 // Return a name and id for a geometry item.
 
-pair<QString,uint> PartFactory::name ( const QString& suggestion )
+std::pair<QString,uint> PartFactory::name ( const QString& suggestion )
 {
   // If there's no suggestion, make something completely up.
   if ( suggestion.isEmpty() ) {
     QString name = QString( "n[%1]" ).arg( ++unique_index_ );
     uint id = ++unique_id_;
-    pair<QString,uint> name_id( name, id );
+    std::pair<QString,uint> name_id( name, id );
     names_.insert( name_id );
     return name_id;
   }
 
   // If it's already there, return that.
-  map<QString,uint>::const_iterator entry = names_.find( suggestion );
+  std::map<QString,uint>::const_iterator entry = names_.find( suggestion );
   if ( entry != names_.end() ) {
     return *entry;
   }
   // Otherwise, use the suggested name but with a unique id.
-  pair<QString,uint> name_id( suggestion, ++unique_id_ );
+  std::pair<QString,uint> name_id( suggestion, ++unique_id_ );
   names_.insert( name_id );
 
   return name_id;
@@ -358,7 +358,7 @@ pair<QString,uint> PartFactory::name ( c
 
 QString PartFactory::name ( uint id )
 {
-  map<QString,uint>::const_iterator entry = names_.begin();
+  std::map<QString,uint>::const_iterator entry = names_.begin();
   for ( ; entry != names_.end(); ++entry )
     if ( (*entry).second == id )
       return (*entry).first;
diff -ur -urp lignumCAD/part.h ../lignumCAD-1/part.h
--- lignumCAD/part.h	2002-11-26 23:30:46.000000000 +0100
+++ ../lignumCAD-1/part.h	2010-05-29 18:08:32.000000000 +0200
@@ -284,7 +284,7 @@ public:
    * invent a unique name.
    * \return the matched set of name and integer id.
    */
-  pair< QString, uint > name ( const QString& suggestion );
+  std::pair< QString, uint > name ( const QString& suggestion );
 
   /*!
    * Look up the name corresponding to this id.
@@ -303,7 +303,7 @@ private:
   //! List of parts in the library.
   QPtrList< PartMetadata > part_data_;
   //! Global list of geometry names and ids.
-  map<QString, uint> names_;
+  std::map<QString, uint> names_;
   //! Last unique name index used.
   uint unique_index_;
   //! Last unique id used.
diff -ur -urp lignumCAD/rectangleview.h ../lignumCAD-1/rectangleview.h
--- lignumCAD/rectangleview.h	2002-11-21 17:19:37.000000000 +0100
+++ ../lignumCAD-1/rectangleview.h	2010-05-29 16:26:14.000000000 +0200
@@ -158,7 +158,7 @@ namespace Space2D {
     QIntDict< GraphicsView > rectangle_objects_;
     QIntDict< DimensionView > dimensionview_objects_;
 
-    map< int, lC::ValidDelta( Rectangle::* ) ( const Point&, Point& )> adjustments_;
+    std::map< int, lC::ValidDelta( Rectangle::* ) ( const Point&, Point& )> adjustments_;
 
     //! Optional style for the rectangle. Otherwise inherits page default.
     Style* style_;
@@ -196,14 +196,14 @@ namespace Space2D {
     QString name ( void ) const;
     QString type ( void ) const;
     DBURL dbURL ( void ) const;
-    QString selectionText ( const vector<GLuint>& selection_name,
+    QString selectionText ( const std::vector<GLuint>& selection_name,
 			    SelectionEntity entity ) const;
     View* lookup ( QStringList& path_components ) const;
 
     void setHighlighted ( bool highlight, SelectionEntity entity,
-			  const vector<GLuint>& items );
+			  const std::vector<GLuint>& items );
     void setActivated ( bool activate, SelectionEntity entity,
-			const vector<GLuint>& items );
+			const std::vector<GLuint>& items );
 
     uint dimensionPickCount ( void ) const { return 2; }
     void setDimensionView ( const QDomElement& xml_rep );
diff -ur -urp lignumCAD/referencelineview.cpp ../lignumCAD-1/referencelineview.cpp
--- lignumCAD/referencelineview.cpp	2002-12-04 14:47:01.000000000 +0100
+++ ../lignumCAD-1/referencelineview.cpp	2010-05-29 19:22:23.000000000 +0200
@@ -333,7 +333,7 @@ namespace Space2D {
 	dynamic_cast< FigureView* >( reference_line_view_->parent()->
 				     figureSelectionNames()[ (*f).second[0] ] );
 
-      vector<GLuint>::const_iterator g;
+      std::vector<GLuint>::const_iterator g;
 
       for ( g = (*f).second.begin(); g != (*f).second.end(); ++g ) {
 
@@ -570,7 +570,7 @@ namespace Space2D {
 
       if ( fv == reference_line_view_ ) continue;
 
-      vector<GLuint>::const_iterator g;
+      std::vector<GLuint>::const_iterator g;
 
       for ( g = (*f).second.begin(); g != (*f).second.end(); ++g ) {
 
@@ -1068,7 +1068,7 @@ namespace Space2D {
     return reference_line_->dbURL();
   }
 
-  QString ReferenceLineView::selectionText ( const vector<GLuint>&
+  QString ReferenceLineView::selectionText ( const std::vector<GLuint>&
 					     /*selection_name*/,
 					     SelectionEntity /*entity*/ ) const
   {
@@ -1099,7 +1099,7 @@ namespace Space2D {
   }
 
   void ReferenceLineView::setHighlighted( bool highlight, SelectionEntity entity,
-					  const vector<GLuint>& items )
+					  const std::vector<GLuint>& items )
   {
     if (entity == FIGURE ) {
       DimensionView* dmv = 0;
@@ -1119,7 +1119,7 @@ namespace Space2D {
   }
 
   void ReferenceLineView::setActivated( bool activate, SelectionEntity entity,
-					const vector<GLuint>& items )
+					const std::vector<GLuint>& items )
   {
     if ( entity == FIGURE ) {
       DimensionView* dmv = 0;
diff -ur -urp lignumCAD/referencelineview.h ../lignumCAD-1/referencelineview.h
--- lignumCAD/referencelineview.h	2002-11-20 21:13:27.000000000 +0100
+++ ../lignumCAD-1/referencelineview.h	2010-05-29 16:26:46.000000000 +0200
@@ -150,14 +150,14 @@ namespace Space2D {
     QString name ( void ) const;
     QString type ( void ) const;
     DBURL dbURL ( void ) const;
-    QString selectionText ( const vector<GLuint>& selection_name,
+    QString selectionText ( const std::vector<GLuint>& selection_name,
 			    SelectionEntity entity ) const;
     View* lookup ( QStringList& path_components ) const;
 
     void setHighlighted( bool highlight, SelectionEntity entity,
-			 const vector<GLuint>& items );
+			 const std::vector<GLuint>& items );
     void setActivated( bool activate, SelectionEntity entity,
-		       const vector<GLuint>& items );
+		       const std::vector<GLuint>& items );
 
     InputObject* createInput ( void ) { return &create_input_; }
     InputObject* modifyInput ( void );
diff -ur -urp lignumCAD/subassemblyview.h ../lignumCAD-1/subassemblyview.h
--- lignumCAD/subassemblyview.h	2002-11-13 20:12:06.000000000 +0100
+++ ../lignumCAD-1/subassemblyview.h	2010-05-29 18:55:29.000000000 +0200
@@ -65,17 +65,17 @@ public:
    * \param entity entity selected for in view.
    * \return string representing selection.
    */
-  QString selectionText ( const vector<GLuint>& selection_name,
+  QString selectionText ( const std::vector<GLuint>& selection_name,
 			  SelectionEntity entity ) const;
   View* lookup ( QStringList& path_components ) const;
-  void lookup ( QValueVector<uint>& id_path, vector<GLuint>& name_path ) const;
-  QString geometry ( const vector<GLuint>& selection_name ) const;
-  QValueVector<uint> geomPath ( const vector<GLuint>& selection_name ) const;
+  void lookup ( QValueVector<uint>& id_path, std::vector<GLuint>& name_path ) const;
+  QString geometry ( const std::vector<GLuint>& selection_name ) const;
+  QValueVector<uint> geomPath ( const std::vector<GLuint>& selection_name ) const;
 
   void setHighlighted ( bool highlight, SelectionEntity entity,
-			const vector<GLuint>& items );
+			const std::vector<GLuint>& items );
   void setActivated( bool activate, SelectionEntity entity,
-		     const vector<GLuint>& items );
+		     const std::vector<GLuint>& items );
 
   InputObject* createInput ( void ) { return 0; }
   InputObject* modifyInput ( void );
diff -urp lignumCAD.pld/centerlineview.cpp lignumCAD.pld2/centerlineview.cpp
--- lignumCAD/centerlineview.cpp	2002-12-04 14:47:01.000000000 +0100
+++ lignumCAD.pld2/centerlineview.cpp	2010-09-15 20:11:07.000000000 +0200
@@ -330,7 +330,7 @@ namespace Space2D {
 	dynamic_cast< FigureView* >( centerline_view_->parent()->
 				     figureSelectionNames()[ (*f).second[0] ] );
 
-      vector<GLuint>::const_iterator g;
+      std::vector<GLuint>::const_iterator g;
 
       for ( g = (*f).second.begin(); g != (*f).second.end(); ++g ) {
 
@@ -566,7 +566,7 @@ namespace Space2D {
 
       if ( fv == centerline_view_ ) continue;
 
-      vector<GLuint>::const_iterator g;
+      std::vector<GLuint>::const_iterator g;
 
       for ( g = (*f).second.begin(); g != (*f).second.end(); ++g ) {
 
@@ -1095,7 +1095,7 @@ namespace Space2D {
     return centerline_->dbURL();
   }
 
-  QString CenterlineView::selectionText ( const vector<GLuint>& /*selection_name*/,
+  QString CenterlineView::selectionText ( const std::vector<GLuint>& /*selection_name*/,
 					  SelectionEntity /*entity*/ ) const
   {
     return centerline_->name();
@@ -1124,7 +1124,7 @@ namespace Space2D {
   }
 
   void CenterlineView::setHighlighted( bool highlight, SelectionEntity entity,
-				       const vector<GLuint>& items )
+				       const std::vector<GLuint>& items )
   {
     if (entity == FIGURE ) {
       DimensionView* dmv = 0;
@@ -1144,7 +1144,7 @@ namespace Space2D {
   }
 
   void CenterlineView::setActivated( bool activate, SelectionEntity entity,
-				     const vector<GLuint>& items )
+				     const std::vector<GLuint>& items )
   {
     if ( entity == FIGURE ) {
       DimensionView* dmv = 0;
diff -urp lignumCAD.pld/rectangleview.cpp lignumCAD.pld2/rectangleview.cpp
--- lignumCAD/rectangleview.cpp	2002-12-04 14:48:10.000000000 +0100
+++ lignumCAD.pld2/rectangleview.cpp	2010-09-15 20:12:55.000000000 +0200
@@ -581,7 +581,7 @@ namespace Space2D {
 	dynamic_cast< FigureView* >( rectangle_view_->parent()->
 				     figureSelectionNames()[ (*f).second[0] ] );
 
-      vector<GLuint>::const_iterator g;
+      std::vector<GLuint>::const_iterator g;
 
       for ( g = (*f).second.begin(); g != (*f).second.end(); ++g ) {
 
@@ -627,7 +627,7 @@ namespace Space2D {
 	dynamic_cast< FigureView* >( rectangle_view_->parent()->
 				     figureSelectionNames()[ (*f).second[0] ] );
 
-      vector<GLuint>::const_iterator g;
+      std::vector<GLuint>::const_iterator g;
 
       for ( g = (*f).second.begin(); g != (*f).second.end(); ++g ) {
 
@@ -854,7 +854,7 @@ namespace Space2D {
 
       if ( fv == rectangle_view_ ) continue;
 
-      vector<GLuint>::const_iterator g;
+      std::vector<GLuint>::const_iterator g;
 
       for ( g = (*f).second.begin(); g != (*f).second.end(); ++g ) {
 
@@ -1744,7 +1744,7 @@ namespace Space2D {
     return rectangle_->dbURL();
   }
 
-  QString RectangleView::selectionText ( const vector<GLuint>& selection_name,
+  QString RectangleView::selectionText ( const std::vector<GLuint>& selection_name,
 					 SelectionEntity entity ) const
   {
     QString text;
@@ -1794,7 +1794,7 @@ namespace Space2D {
 
 
   void RectangleView::setHighlighted ( bool highlight, SelectionEntity entity,
-				       const vector<GLuint>& items )
+				       const std::vector<GLuint>& items )
   {
     if ( entity == FIGURE ) {
       DimensionView* dmv = 0;
@@ -1814,7 +1814,7 @@ namespace Space2D {
   }
 
   void RectangleView::setActivated ( bool activate, SelectionEntity entity,
-				     const vector<GLuint>& items )
+				     const std::vector<GLuint>& items )
   {
     if ( entity == FIGURE ) {
       DimensionView* dmv = 0;
diff -urp lignumCAD.pld/constructiondatumview.h lignumCAD.pld2/constructiondatumview.h
--- lignumCAD/constructiondatumview.h	2002-10-04 21:37:16.000000000 +0200
+++ lignumCAD.pld2/constructiondatumview.h	2010-09-15 21:29:59.000000000 +0200
@@ -87,7 +87,7 @@ namespace Space3D {
     //! The singleton instance of the constructiondatumview factory.
     static ConstructionDatumViewFactory* instance_;
 
-    map< QString, const ConstructionDatumViewMetadata*> views_;
+    std::map< QString, const ConstructionDatumViewMetadata*> views_;
   };
 } // end of Space3D namespace
 #endif // CONSTRUCTIONDATUMVIEW_H
diff -urp lignumCAD.pld/libemf.cpp lignumCAD.pld2/libemf.cpp
--- lignumCAD/libemf.cpp	2002-06-14 19:52:59.000000000 +0200
+++ lignumCAD.pld2/libemf.cpp	2010-09-15 21:18:11.000000000 +0200
@@ -48,7 +50,7 @@ namespace EMF {
       be32 = !be16;
 
     if ( be32 != be16 ) {
-      cerr << "endian-ness not consistent between short's and int's!" << endl;
+      std::cerr << "endian-ness not consistent between short's and int's!" << std::endl;
       ::abort();
     }
 
@@ -854,7 +856,7 @@ extern "C" {
     if ( dc->fp ) {
 
       std::for_each( dc->records.begin(), dc->records.end(),
-		     std::bind2nd( std::mem_fun1( &EMF::METARECORD::serialize ),
+		     std::bind2nd( __gnu_cxx::mem_fun1( &EMF::METARECORD::serialize ),
 				   dc->ds ) );
       fclose( dc->fp );
 
@@ -901,7 +903,7 @@ extern "C" {
     if ( dc->fp ) {
 
       std::for_each( dc->records.begin(), dc->records.end(),
-		     std::bind2nd( std::mem_fun1( &EMF::METARECORD::serialize ),
+		     std::bind2nd( __gnu_cxx::mem_fun1( &EMF::METARECORD::serialize ),
 				   dc->ds ) );
     }
 
@@ -1037,7 +1039,7 @@ extern "C" {
       if ( feof( fp ) ) break;
 
       if ( emr.nSize == 0 ) {
-	cerr << "GetEnhMetaFileW error: record size == 0. cannot continue" << endl;
+	std::cerr << "GetEnhMetaFileW error: record size == 0. cannot continue" << std::endl;
 	fclose( fp );
 	return 0;
       }
@@ -1055,8 +1057,8 @@ extern "C" {
 	dc->appendRecord( record );
       }
       else
-	cerr << "GetEnhMetaFileW warning: read unknown record type " << emr.iType
-	     << " of size " << emr.nSize << endl;
+	std::cerr << "GetEnhMetaFileW warning: read unknown record type " << emr.iType
+	     << " of size " << emr.nSize << std::endl;
 
       // Regardless, position ourselves at the next record.
       fseek( fp, next_position, SEEK_SET );
diff -urp lignumCAD.pld/ocsolid.cpp lignumCAD.pld2/ocsolid.cpp
--- lignumCAD/ocsolid.cpp	2002-12-13 17:23:28.000000000 +0100
+++ lignumCAD.pld2/ocsolid.cpp	2010-09-15 21:25:26.000000000 +0200
@@ -228,7 +228,7 @@ namespace Space3D {
 
   QString OCSolid::idPath ( QValueVector<uint> id_path ) const
   {
-    hash_map<TopoDS_Face,uint,lCShapeHasher>::const_iterator face =
+    __gnu_cxx::hash_map<TopoDS_Face,uint,lCShapeHasher>::const_iterator face =
       face_names_.begin();
 
     for ( ; face != face_names_.end(); ++face )
@@ -251,7 +251,7 @@ namespace Space3D {
     QString type = path_components.front().right( path_components.front().length()
 						  - dot_pos - 1 );
 
-    hash_map<TopoDS_Face,uint,lCShapeHasher>::const_iterator face =
+    __gnu_cxx::hash_map<TopoDS_Face,uint,lCShapeHasher>::const_iterator face =
       face_names_.begin();
 
     for ( ; face != face_names_.end(); ++face )
@@ -514,9 +514,9 @@ namespace Space3D {
     emit modified();
   }
 
-  void OCSolidRPP::updateParameters ( const map<QString,double>& parameters )
+  void OCSolidRPP::updateParameters ( const std::map<QString,double>& parameters )
   {
-    map<QString,double>::const_iterator p = parameters.begin();
+    std::map<QString,double>::const_iterator p = parameters.begin();
     for ( ; p != parameters.end(); ++p ) {
       parameter( (*p).first ).setValue( (*p).second );
     }
@@ -548,7 +548,7 @@ namespace Space3D {
     double length = parameter( lC::STR::LENGTH ).value();
     double width = parameter( lC::STR::WIDTH ).value();
     double thickness = parameter( lC::STR::THICKNESS ).value();
-    map<QString,double> parameters;
+    std::map<QString,double> parameters;
 
     if ( length + delta[X] <= minimum_size ) {
       if ( length <= minimum_size )
@@ -602,7 +602,7 @@ namespace Space3D {
       
     QDomElement rpp_element = document.createElement( lC::STR::RPP );
 
-    map<QString,Parameter>::const_iterator parameter = parametersBegin();
+    std::map<QString,Parameter>::const_iterator parameter = parametersBegin();
     for ( ; parameter != parametersEnd(); ++parameter )
       rpp_element.setAttribute( (*parameter).first,
 				lC::format( (*parameter).second.value() ) );
@@ -812,9 +812,9 @@ namespace Space3D {
     emit modified();
   }
 
-  void OCSolidPGP::updateParameters ( const map<QString,double>& parameters )
+  void OCSolidPGP::updateParameters ( const std::map<QString,double>& parameters )
   {
-    map<QString,double>::const_iterator p = parameters.begin();
+    std::map<QString,double>::const_iterator p = parameters.begin();
     for ( ; p != parameters.end(); ++p ) {
       parameter( (*p).first ).setValue( (*p).second );
     }
@@ -846,7 +846,7 @@ namespace Space3D {
     double length = parameter( lC::STR::LENGTH ).value();
     double width = parameter( lC::STR::WIDTH ).value();
     double thickness = parameter( lC::STR::THICKNESS ).value();
-    map<QString,double> parameters;
+    std::map<QString,double> parameters;
 
     if ( length + delta[X] <= minimum_size ) {
       if ( length <= minimum_size )
@@ -900,7 +900,7 @@ namespace Space3D {
       
     QDomElement pgp_element = document.createElement( lC::STR::PGP );
 
-    map<QString,Parameter>::const_iterator parameter = parametersBegin();
+    std::map<QString,Parameter>::const_iterator parameter = parametersBegin();
     for ( ; parameter != parametersEnd(); ++parameter )
       pgp_element.setAttribute( (*parameter).first,
 				lC::format( (*parameter).second.value() ) );
@@ -1051,9 +1051,9 @@ namespace Space3D {
     emit modified();
   }
 
-  void OCSolidCYL::updateParameters ( const map<QString,double>& parameters )
+  void OCSolidCYL::updateParameters ( const std::map<QString,double>& parameters )
   {
-    map<QString,double>::const_iterator p = parameters.begin();
+    std::map<QString,double>::const_iterator p = parameters.begin();
     for ( ; p != parameters.end(); ++p ) {
       parameter( (*p).first ).setValue( (*p).second );
     }
@@ -1083,7 +1083,7 @@ namespace Space3D {
 
     double length = parameter( lC::STR::LENGTH ).value();
     double diameter = parameter( lC::STR::DIAMETER ).value();
-    map<QString,double> parameters;
+    std::map<QString,double> parameters;
 
     if ( length + delta[Z] <= minimum_size ) {
       if ( length <= minimum_size )
@@ -1126,7 +1126,7 @@ namespace Space3D {
 
     QDomElement cyl_element = document.createElement( lC::STR::CYL );
 
-    map<QString,Parameter>::const_iterator parameter = parametersBegin();
+    std::map<QString,Parameter>::const_iterator parameter = parametersBegin();
     for ( ; parameter != parametersEnd(); ++parameter )
       cyl_element.setAttribute( (*parameter).first,
 				lC::format( (*parameter).second.value() ) );
@@ -1457,9 +1457,9 @@ namespace Space3D {
     emit modified();
   }
 
-  void OCSolidRPPCON::updateParameters ( const map<QString,double>& parameters )
+  void OCSolidRPPCON::updateParameters ( const std::map<QString,double>& parameters )
   {
-    map<QString,double>::const_iterator p = parameters.begin();
+    std::map<QString,double>::const_iterator p = parameters.begin();
     for ( ; p != parameters.end(); ++p ) {
       parameter( (*p).first ).setValue( (*p).second );
     }
@@ -1498,7 +1498,7 @@ namespace Space3D {
     double con_length = parameter( lC::STR::CON_LENGTH ).value();
     double con_top_diameter = parameter( lC::STR::CON_TOP_DIAMETER ).value();
     double con_bottom_diameter = parameter( lC::STR::CON_BOTTOM_DIAMETER ).value();
-    map<QString,double> parameters;
+    std::map<QString,double> parameters;
 
     if ( id == 0 || id == 1 || id == 2 || id == 3 ) {
       if ( length + delta[Z] <= minimum_size ) {
@@ -1619,7 +1619,7 @@ namespace Space3D {
 
     QDomElement rppcon_element = document.createElement( lC::STR::RPPCON );
 
-    map<QString,Parameter>::const_iterator parameter = parametersBegin();
+    std::map<QString,Parameter>::const_iterator parameter = parametersBegin();
     for ( ; parameter != parametersEnd(); ++parameter )
       rppcon_element.setAttribute( (*parameter).first,
 				   lC::format( (*parameter).second.value() ) );
@@ -1941,9 +1941,9 @@ namespace Space3D {
     //    cout << now() << path() << " modified [after emit]" << endl;
   }
 
-  void OCSolidRPPPYR::updateParameters ( const map<QString,double>& parameters )
+  void OCSolidRPPPYR::updateParameters ( const std::map<QString,double>& parameters )
   {
-    map<QString,double>::const_iterator p = parameters.begin();
+    std::map<QString,double>::const_iterator p = parameters.begin();
     for ( ; p != parameters.end(); ++p ) {
       parameter( (*p).first ).setValue( (*p).second );
     }
@@ -1977,7 +1977,7 @@ namespace Space3D {
     double rec_length = parameter( lC::STR::REC_LENGTH ).value();
     double rec_width = parameter( lC::STR::REC_WIDTH ).value();
     double pyr_width = parameter( lC::STR::PYR_WIDTH ).value();
-    map<QString,double> parameters;
+    std::map<QString,double> parameters;
 
     if ( id == 0 || id == 1 || id == 2 || id == 3 ||
 	 id == 4 || id == 5 || id == 6 || id == 7 ) {
@@ -2070,7 +2070,7 @@ namespace Space3D {
 
     QDomElement rpppyr_element = document.createElement( lC::STR::RPPPYR );
 
-    map<QString,Parameter>::const_iterator parameter = parametersBegin();
+    std::map<QString,Parameter>::const_iterator parameter = parametersBegin();
     for ( ; parameter != parametersEnd(); ++parameter )
       rpppyr_element.setAttribute( (*parameter).first,
 				   lC::format( (*parameter).second.value() ) );
@@ -2359,9 +2359,9 @@ namespace Space3D {
     emit modified();
   }
 
-  void OCSolidBSPCYL::updateParameters ( const map<QString,double>& parameters )
+  void OCSolidBSPCYL::updateParameters ( const std::map<QString,double>& parameters )
   {
-    map<QString,double>::const_iterator p = parameters.begin();
+    std::map<QString,double>::const_iterator p = parameters.begin();
     for ( ; p != parameters.end(); ++p ) {
       parameter( (*p).first ).setValue( (*p).second );
     }
@@ -2395,7 +2395,7 @@ namespace Space3D {
     double bsp_diameter = parameter( lC::STR::BSP_DIAMETER ).value();
     double cyl_diameter = parameter( lC::STR::CYL_DIAMETER ).value();
     double cyl_length = parameter( lC::STR::CYL_LENGTH ).value();
-    map<QString,double> parameters;
+    std::map<QString,double> parameters;
 
     if ( id == 2 || id == 3 ) {
       if ( length + delta[Z] <= minimum_size ) {
@@ -2486,7 +2486,7 @@ namespace Space3D {
 
     QDomElement bspcyl_element = document.createElement( lC::STR::BSPCYL );
 
-    map<QString,Parameter>::const_iterator parameter = parametersBegin();
+    std::map<QString,Parameter>::const_iterator parameter = parametersBegin();
     for ( ; parameter != parametersEnd(); ++parameter )
       bspcyl_element.setAttribute( (*parameter).first,
 				   lC::format( (*parameter).second.value() ) );
diff -urp lignumCAD.pld/ocsoliddraw.cpp lignumCAD.pld2/ocsoliddraw.cpp
--- lignumCAD/ocsoliddraw.cpp	2002-12-13 17:18:05.000000000 +0100
+++ lignumCAD.pld2/ocsoliddraw.cpp	2010-09-15 21:39:07.000000000 +0200
@@ -143,7 +143,7 @@ namespace Space3D {
       // Assign a selection name to this face if it doesn't have one already.
       GLuint selection_name;
 
-      map< uint, GLuint >::const_iterator face_id =
+      std::map< uint, GLuint >::const_iterator face_id =
 	face_ids_.find( solid_->faceID( face ) );
       if ( face_id == face_ids_.end() ) {
 	selection_name = view_->genSelectionName();
@@ -153,7 +153,7 @@ namespace Space3D {
 	selection_name = (*face_id).second;
       }
 
-      map<GLuint,GV>::const_iterator wire_view =
+      std::map<GLuint,GV>::const_iterator wire_view =
 	wire_views_.find( selection_name );
       if ( wire_view == wire_views_.end() )
 	wire_views_[selection_name] = GV( glGenLists(1) );
@@ -187,7 +187,7 @@ namespace Space3D {
   }
 
   namespace {
-    struct Harlequin : map<QString,QColor> {
+    struct Harlequin : std::map<QString,QColor> {
       Harlequin ( void )
       {
 	(*this)[lC::STR::FRONT] = Qt::green;
@@ -216,7 +216,7 @@ namespace Space3D {
       // Assign a selection name to this face if it doesn't have one already.
       GLuint selection_name;
 
-      map< uint, GLuint >::const_iterator face_id =
+      std::map< uint, GLuint >::const_iterator face_id =
 	face_ids_.find( solid_->faceID( face ) );
       if ( face_id == face_ids_.end() ) {
 	selection_name = view_->genSelectionName();
@@ -226,7 +226,7 @@ namespace Space3D {
 	selection_name = (*face_id).second;
       }
 
-      map<GLuint,GV>::const_iterator face_view =
+      std::map<GLuint,GV>::const_iterator face_view =
 	face_views_.find( selection_name );
       if ( face_view == face_views_.end() )
 	face_views_[selection_name] = GV( glGenLists(1) );
@@ -343,7 +343,7 @@ namespace Space3D {
   {
     // Unfortunately, this involves a search...
 
-    map<uint,GLuint>::const_iterator face = face_ids_.begin();
+    std::map<uint,GLuint>::const_iterator face = face_ids_.begin();
     for ( ; face != face_ids_.end(); ++face )
       if ( (*face).second == selection_name )
 	return lC::formatName( solid_->name() ) + '.' + solid_->type() + '/' +
@@ -357,7 +357,7 @@ namespace Space3D {
   {
     // Unfortunately, this involves a search...
 
-    map<uint,GLuint>::const_iterator face = face_ids_.begin();
+    std::map<uint,GLuint>::const_iterator face = face_ids_.begin();
     for ( ; face != face_ids_.end(); ++face )
       if ( (*face).second == selection_name )
 	return lC::formatName( solid_->name() ) + '/' +
@@ -371,7 +371,7 @@ namespace Space3D {
     QValueVector<uint> id_path( 2 );
     // Unfortunately, this involves a search...
 
-    map<uint,GLuint>::const_iterator face = face_ids_.begin();
+    std::map<uint,GLuint>::const_iterator face = face_ids_.begin();
     for ( ; face != face_ids_.end(); ++face )
       if ( (*face).second == selection_name ) {
 	id_path[0] = solid_->id();
@@ -385,7 +385,7 @@ namespace Space3D {
   {
     // Only make new handle graphics views if the handle name is unknown
     // (i.e., this should only occur once, immediately after solid creation).
-    map<uint, HandleData>::const_iterator handle = solid_->handlesBegin();
+    std::map<uint, HandleData>::const_iterator handle = solid_->handlesBegin();
     for ( ; handle != solid_->handlesEnd(); ++handle ) {
       if ( handle_ids_.find( (*handle).first ) == handle_ids_.end() )
 	handle_ids_[ (*handle).first ] = view_->genSelectionName();
@@ -395,7 +395,7 @@ namespace Space3D {
   bool OCSolidDraw::isHandle ( GLuint selection_name ) const
   {
     // Unfortunately, this involves a search...
-    map<uint,GLuint>::const_iterator handle = handle_ids_.begin();
+    std::map<uint,GLuint>::const_iterator handle = handle_ids_.begin();
     for ( ; handle != handle_ids_.end(); ++handle )
       if ( (*handle).second == selection_name )
 	return true;
@@ -405,7 +405,7 @@ namespace Space3D {
 
   uint OCSolidDraw::handleID ( GLuint selection_name ) const
   {
-    map<uint,GLuint>::const_iterator handle = handle_ids_.begin();
+    std::map<uint,GLuint>::const_iterator handle = handle_ids_.begin();
     for ( ; handle != handle_ids_.end(); ++handle )
       if ( (*handle).second == selection_name )
 	return (*handle).first;
@@ -415,9 +415,9 @@ namespace Space3D {
 
   QString OCSolidDraw::activeDimensionName ( void ) const
   {
-    map<QString,GLuint>::const_iterator dimension_name = dimension_names_.begin();
+    std::map<QString,GLuint>::const_iterator dimension_name = dimension_names_.begin();
     for ( ; dimension_name != dimension_names_.end(); ++dimension_name ) {
-      map<GLuint,Dimension>::const_iterator dimension_view =
+      std::map<GLuint,Dimension>::const_iterator dimension_view =
 	dimension_views_.find( (*dimension_name).second );
       if ( dimension_view != dimension_views_.end() ) {
 	if ( (*dimension_view).second.mode() == lC::Render::ACTIVATED )
@@ -570,11 +570,11 @@ namespace Space3D {
 
   void OCSolidDraw::updateDimensionViews ( void )
   {
-    map<QString,Parameter>::const_iterator parameter = solid_->parametersBegin();
+    std::map<QString,Parameter>::const_iterator parameter = solid_->parametersBegin();
     for ( ; parameter != solid_->parametersEnd(); ++parameter ) {
 
       GLuint selection_name;
-      map<QString,GLuint>::const_iterator dimension_name =
+      std::map<QString,GLuint>::const_iterator dimension_name =
 	dimension_names_.find( (*parameter).first );
       if ( dimension_name == dimension_names_.end() ) {
 	selection_name = view_->genSelectionName();
@@ -593,10 +593,10 @@ namespace Space3D {
 		     (*parameter).second.normal().Y(),
 		     (*parameter).second.normal().Z() );
 
-      map<GLuint,Dimension>::iterator dimension =
+      std::map<GLuint,Dimension>::iterator dimension =
 	dimension_views_.find( selection_name );
       if ( dimension == dimension_views_.end() )
-	dimension_views_.insert( pair<GLuint,Dimension>( selection_name,
+	dimension_views_.insert( std::pair<GLuint,Dimension>( selection_name,
           Dimension( end0, end1, normal, view_, (*parameter).second.note() ) ) );
       else
 	(*dimension).second.setEndsNormal( end0, end1, normal, view_,
@@ -606,12 +606,12 @@ namespace Space3D {
 
   void OCSolidDraw::updateDatums ( void )
   {
-    map<QString,const ConstructionDatum*>::const_iterator datum =
+    std::map<QString,const ConstructionDatum*>::const_iterator datum =
       solid_->datumsBegin();
     for ( ; datum != solid_->datumsEnd(); ++datum ) {
 
       GLuint selection_name;
-      map<QString,GLuint>::const_iterator datum_name =
+      std::map<QString,GLuint>::const_iterator datum_name =
 	datum_names_.find( (*datum).first );
       if ( datum_name == datum_names_.end() ) {
 	selection_name = view_->genSelectionName();
@@ -620,10 +620,10 @@ namespace Space3D {
       else
 	selection_name = (*datum_name).second;
 
-      map<GLuint,ConstructionDatumView*>::iterator datum_view =
+      std::map<GLuint,ConstructionDatumView*>::iterator datum_view =
 	datum_views_.find( selection_name );
       if ( datum_view == datum_views_.end() )
-	datum_views_.insert( pair<GLuint,ConstructionDatumView*>( selection_name,
+	datum_views_.insert( std::pair<GLuint,ConstructionDatumView*>( selection_name,
 	  ConstructionDatumViewFactory::instance()->create( (*datum).second ) ) );
     }
   }
@@ -632,7 +632,7 @@ namespace Space3D {
   {
     const GLdouble* modelview = view_->viewOrientation();
 
-    map<GLuint,Dimension>::iterator dimension = dimension_views_.begin();
+    std::map<GLuint,Dimension>::iterator dimension = dimension_views_.begin();
     for ( ; dimension != dimension_views_.end(); ++dimension )
       (*dimension).second.setViewNormal( Vector( modelview[2],
 						 modelview[6],
@@ -661,7 +661,7 @@ namespace Space3D {
 	break;
       case FACE:
 	glColor3ubv( lC::qCubv( view_->geometryColor() ) );
-	map<GLuint,GV>::const_iterator wv = wire_views_.begin();
+	std::map<GLuint,GV>::const_iterator wv = wire_views_.begin();
 	for ( ; wv != wire_views_.end(); ++wv ) {
 
 	  switch ( (*wv).second.mode() ) {
@@ -700,7 +700,7 @@ namespace Space3D {
       glPopMatrix();
 
       glColor3ubv( lC::qCubv( view_->geometryColor().light() ) );
-      map<GLuint,GV>::const_iterator wv = wire_views_.begin();
+      std::map<GLuint,GV>::const_iterator wv = wire_views_.begin();
       for ( ; wv != wire_views_.end(); ++wv ) {
 
 	switch ( (*wv).second.mode() ) {
@@ -723,7 +723,7 @@ namespace Space3D {
       QColor color = view_->geometryColor();
       if ( solid_->material() != 0 )
 	color = solid_->material()->color();
-      map<GLuint,GV>::const_iterator fv = face_views_.begin();
+      std::map<GLuint,GV>::const_iterator fv = face_views_.begin();
 
       switch ( entity ) {
 
@@ -784,7 +784,7 @@ namespace Space3D {
       QColor color = view_->geometryColor();
       if ( solid_->material() != 0 )
 	color = solid_->material()->color();
-      map<GLuint,GV>::const_iterator fv = face_views_.begin();
+      std::map<GLuint,GV>::const_iterator fv = face_views_.begin();
 
       switch ( entity ) {
 
@@ -835,7 +835,7 @@ namespace Space3D {
     case lC::Render::HIGHLIGHTS: {
 
       glColor3ubv( lC::qCubv( view_->geometryColor().light() ) );
-      map<GLuint,GV>::const_iterator wv = wire_views_.begin();
+      std::map<GLuint,GV>::const_iterator wv = wire_views_.begin();
       for ( ; wv != wire_views_.end(); ++wv ) {
 
 	switch ( (*wv).second.mode() ) {
@@ -858,7 +858,7 @@ namespace Space3D {
 
       case lC::Render::HIGHLIGHTED:
       case lC::Render::ACTIVATED:
-	map<uint, HandleData>::const_iterator handle = solid_->handlesBegin();
+	std::map<uint, HandleData>::const_iterator handle = solid_->handlesBegin();
 	for ( ; handle != solid_->handlesEnd(); ++handle ) {
 	  Point p( (*handle).second.position().X(),
 		   (*handle).second.position().Y(),
@@ -869,11 +869,11 @@ namespace Space3D {
       break;
 
     case FACE: {
-      map<uint,GLuint>::const_iterator fid = face_ids_.begin();
+      std::map<uint,GLuint>::const_iterator fid = face_ids_.begin();
       for ( ; fid != face_ids_.end(); ++fid ) {
 	// Note the need here for a map from face selection name
 	// to the face string name...
-	map<GLuint,GV>::const_iterator fv = face_views_.find((*fid).second);
+	std::map<GLuint,GV>::const_iterator fv = face_views_.find((*fid).second);
 	if ( fv != face_views_.end() ) {
 	  switch ( (*fv).second.mode() ) {
 	  case lC::Render::HIGHLIGHTED:
@@ -904,12 +904,12 @@ namespace Space3D {
       case FIGURE:
 	switch ( mode ) {
 	case lC::Render::ACTIVATED:
-	  map<GLuint,Dimension>::const_iterator dimension =
+	  std::map<GLuint,Dimension>::const_iterator dimension =
 	    dimension_views_.begin();
 	  for ( ; dimension != dimension_views_.end(); ++dimension )
 	    (*dimension).second.draw();
 
-	  map<GLuint,ConstructionDatumView*>::const_iterator datum_view =
+	  std::map<GLuint,ConstructionDatumView*>::const_iterator datum_view =
 	    datum_views_.begin();
 	  for ( ; datum_view != datum_views_.end(); ++datum_view )
 	    (*datum_view).second->draw( view_ );
@@ -922,7 +922,7 @@ namespace Space3D {
   void OCSolidDraw::select ( SelectionEntity entity, lC::Render::Mode mode,
 			     bool select_parameters )
   {
-    map<GLuint,GV>::const_iterator fv = face_views_.begin();
+    std::map<GLuint,GV>::const_iterator fv = face_views_.begin();
     switch ( entity ) {
     case FIGURE:
       // Note: In this case, we expect the view to have already pushed
@@ -933,7 +933,7 @@ namespace Space3D {
       switch ( mode ) {
       case lC::Render::ACTIVATED: {
 	if ( select_parameters ) {
-	  map<GLuint,Dimension>::const_iterator dimension =
+	  std::map<GLuint,Dimension>::const_iterator dimension =
 	    dimension_views_.begin();
 	  for ( ; dimension != dimension_views_.end(); ++dimension ) {
 	    glPushName( (*dimension).first );
@@ -944,9 +944,9 @@ namespace Space3D {
       }
       // Note, delibrate fall through.
       case lC::Render::HIGHLIGHTED: {
-	map<uint, HandleData>::const_iterator handle = solid_->handlesBegin();
+	std::map<uint, HandleData>::const_iterator handle = solid_->handlesBegin();
 	for ( ; handle != solid_->handlesEnd(); ++handle ) {
-	  map<uint,GLuint>::const_iterator h = handle_ids_.find( (*handle).first );
+	  std::map<uint,GLuint>::const_iterator h = handle_ids_.find( (*handle).first );
 	  if ( h != handle_ids_.end() ) {
 	    Point p( (*handle).second.position().X(),
 		     (*handle).second.position().Y(),
@@ -970,12 +970,12 @@ namespace Space3D {
   }
 
   void OCSolidDraw::setHighlighted ( bool highlight, SelectionEntity entity,
-				     const vector<GLuint>& items )
+				     const std::vector<GLuint>& items )
   {
     // I guess this is now out of sync with the previous milieu
     switch ( entity ) {
     case FIGURE: {
-      map<GLuint,Dimension>::iterator dimension = dimension_views_.find( items[1] );
+      std::map<GLuint,Dimension>::iterator dimension = dimension_views_.find( items[1] );
       if ( dimension != dimension_views_.end() ) {
 	if ( (*dimension).second.mode() != lC::Render::ACTIVATED ) {
 	  if ( highlight )
@@ -1001,12 +1001,12 @@ namespace Space3D {
   }
 
   void OCSolidDraw::setActivated ( bool activate, SelectionEntity entity,
-				   const vector<GLuint>& items )
+				   const std::vector<GLuint>& items )
   {
     // I guess this is now out of sync with the previous milieu
     switch ( entity ) {
     case FIGURE: {
-      map<GLuint,Dimension>::iterator dimension = dimension_views_.begin();
+      std::map<GLuint,Dimension>::iterator dimension = dimension_views_.begin();
       for ( ; dimension != dimension_views_.end(); ++dimension )
 	if ( activate )
 	  (*dimension).second.setMode( lC::Render::REGULAR );
diff -urp lignumCAD.pld/ocsoliddraw.h lignumCAD.pld2/ocsoliddraw.h
--- lignumCAD/ocsoliddraw.h	2002-12-13 14:05:52.000000000 +0100
+++ lignumCAD.pld2/ocsoliddraw.h	2010-09-15 21:28:30.000000000 +0200
@@ -126,7 +126,7 @@ namespace Space3D {
      * \param items selection name hierarchy.
      */
     void setHighlighted ( bool highlight, SelectionEntity entity,
-			  const vector<GLuint>& items );
+			  const std::vector<GLuint>& items );
 
     /*!
      * Set the activated status of the given item.
@@ -135,7 +135,7 @@ namespace Space3D {
      * \param items selection name hierarchy.
      */
     void setActivated ( bool activate, SelectionEntity entity,
-			const vector<GLuint>& items );
+			const std::vector<GLuint>& items );
     //! Generic update function. Generally the solid geometry has changed.
     void update ( void );
     //! Compute the hidden lines for the current orientation of the view.
@@ -175,7 +175,7 @@ namespace Space3D {
      */
     GLuint faceGLName ( uint id )
     {
-      map<uint,GLuint>::const_iterator gl_name = face_ids_.find( id );
+      std::map<uint,GLuint>::const_iterator gl_name = face_ids_.find( id );
       if ( gl_name != face_ids_.end() )
 	return (*gl_name).second;
       return 0;			// Really an error...
@@ -215,21 +215,21 @@ namespace Space3D {
     GLuint hlr_bg_name_;
 
     //! The selection names for the wire and solid assigned to each face.
-    map< uint, GLuint > face_ids_;
+    std::map< uint, GLuint > face_ids_;
     //! The display lists and the attributes of the corresponding graphics item.
-    map< GLuint, GV > face_views_;
+    std::map< GLuint, GV > face_views_;
     //! The display lists and the attributes of the corresponding graphics item.
-    map< GLuint, GV > wire_views_;
+    std::map< GLuint, GV > wire_views_;
     //! The selection name assigned to each handle.
-    map< uint, GLuint > handle_ids_;
+    std::map< uint, GLuint > handle_ids_;
     //! The selection name assigned to each parameter's dimension.
-    map< QString, GLuint > dimension_names_;
+    std::map< QString, GLuint > dimension_names_;
     //! The dimension drawer objects.
-    map< GLuint, Dimension > dimension_views_;
+    std::map< GLuint, Dimension > dimension_views_;
     //! The selection name assigned to each construction datum.
-    map< QString, GLuint > datum_names_;
+    std::map< QString, GLuint > datum_names_;
     //! The construction data drawer objects.
-    map< GLuint, ConstructionDatumView* > datum_views_;
+    std::map< GLuint, ConstructionDatumView* > datum_views_;
 
     //! Standard color material (not quite white).
     static GLfloat material_std_[4];
diff -urp lignumCAD.pld/ocsolidview.cpp lignumCAD.pld2/ocsolidview.cpp
--- lignumCAD/ocsolidview.cpp	2002-12-13 17:17:40.000000000 +0100
+++ lignumCAD.pld2/ocsolidview.cpp	2010-09-15 21:29:31.000000000 +0200
@@ -234,14 +234,14 @@ namespace Space3D {
     ModifySolidCommand::ModifySolidCommand ( const QString& name,
 					     DesignBookView* design_book_view,
 					     OCSolid* solid,
-					     const map<QString,double>&
+					     const std::map<QString,double>&
 					     old_parameters )
       : Command( name ), design_book_view_( design_book_view ),
 	db_url_( solid->dbURL() ), old_parameters_( old_parameters )
     {
       // Could improve the efficiency of this by limiting it to only
       // what's actually changed...
-      map<QString,Parameter>::const_iterator parameter =
+      std::map<QString,Parameter>::const_iterator parameter =
 	solid->parametersBegin();
       for ( ; parameter != solid->parametersEnd(); ++parameter )
 	new_parameters_[ (*parameter).first ] = (*parameter).second.value();
@@ -283,10 +283,10 @@ namespace Space3D {
 
       modify_solid_element.setAttribute( lC::STR::NAME, db_url_.toString(true) );
       
-      map<QString,double>::const_iterator old_parameter =old_parameters_.begin();
+      std::map<QString,double>::const_iterator old_parameter =old_parameters_.begin();
 
       for ( ; old_parameter != old_parameters_.end(); ++old_parameter ) {
-	map<QString,double>::const_iterator new_parameter =
+	std::map<QString,double>::const_iterator new_parameter =
 	  new_parameters_.find( (*old_parameter).first );
 	if ( new_parameter != new_parameters_.end() ) {
 	  QDomElement parameter_element = document->createElement(lC::STR::PARAMETER);
@@ -303,9 +303,9 @@ namespace Space3D {
     //! Reference of solid.
     DBURL db_url_;
     //! Old parameters.
-    map<QString,double> old_parameters_;
+    std::map<QString,double> old_parameters_;
     //! New parameters.
-    map<QString,double> new_parameters_;
+    std::map<QString,double> new_parameters_;
   };
 
   OCSolidModifyInput::OCSolidModifyInput ( OCSolid* solid,
@@ -372,7 +372,7 @@ namespace Space3D {
 
 	  if ( solid_view_->isGeometry( g ) ) {
 
-	    map<QString,Parameter>::const_iterator parameter =
+	    std::map<QString,Parameter>::const_iterator parameter =
 	      solid_->parametersBegin();
 	    for ( ; parameter != solid_->parametersEnd(); ++parameter )
 	      old_parameters_[ (*parameter).first ] = (*parameter).second.value();
@@ -509,7 +509,7 @@ namespace Space3D {
     list_view_item_->setText( lC::TYPE, trC( lC::STR::SOLID ) );
     QString detail = tr( "%1:" ).arg( solid_->baseShape() );
     QStringList param_strings;
-    map<QString,Parameter>::const_iterator parameter = solid_->parametersBegin();
+    std::map<QString,Parameter>::const_iterator parameter = solid_->parametersBegin();
     for ( ; parameter != solid_->parametersEnd(); ++parameter )
       param_strings << tr( " %1: %2" ).
 	arg( trC( (*parameter).second.title() ) ).
@@ -646,7 +646,7 @@ namespace Space3D {
     return solid_->dbURL();
   }
 
-  QString OCSolidView::selectionText ( const vector<GLuint>& selection_name,
+  QString OCSolidView::selectionText ( const std::vector<GLuint>& selection_name,
 				       SelectionEntity entity ) const
   {
     QString text;
@@ -668,7 +668,7 @@ namespace Space3D {
   }
 
   void OCSolidView::setHighlighted( bool highlight, SelectionEntity entity,
-				    const vector<GLuint>& items )
+				    const std::vector<GLuint>& items )
   {
     
     if (entity == FIGURE ) {
@@ -686,7 +686,7 @@ namespace Space3D {
   }
 
   void OCSolidView::setActivated( bool activate, SelectionEntity entity,
-				  const vector<GLuint>& items )
+				  const std::vector<GLuint>& items )
   {
     if ( entity == FIGURE ) {
 
@@ -736,7 +736,7 @@ namespace Space3D {
     // Update the list view.
     QString detail = tr( "%1:" ).arg( solid_->baseShape() );
     QStringList param_strings;
-    map<QString,Parameter>::const_iterator parameter = solid_->parametersBegin();
+    std::map<QString,Parameter>::const_iterator parameter = solid_->parametersBegin();
     for ( ; parameter != solid_->parametersEnd(); ++parameter )
       param_strings << tr( " %1: %2" ).
 	arg( trC( (*parameter).second.title() ) ).
@@ -792,7 +792,7 @@ namespace Space3D {
       if ( ret == QDialog::Rejected ) return;
 
       if ( parameter_info_dialog_->parameterLengthConstraint->edited() ) {
-	map<QString,double> old_parameter;
+	std::map<QString,double> old_parameter;
 	old_parameter[ parameter_name ] = parameter.value();
 	//	cout << "Updating parameter " << parameter_name << " of " << solid_->path()
 	//	     << endl;
diff -urp lignumCAD.pld/octexturefunction.cpp lignumCAD.pld2/octexturefunction.cpp
--- lignumCAD/octexturefunction.cpp	2002-11-13 14:09:45.000000000 +0100
+++ lignumCAD.pld2/octexturefunction.cpp	2010-09-15 21:30:45.000000000 +0200
@@ -695,7 +695,7 @@ OCTextureFunction* OCTextureFactory::fun
 
   Handle( Geom_Surface ) surface = BRep_Tool::Surface( face );
 
-  map<Standard_Integer, OCTextureFunction*>::iterator tf =
+  std::map<Standard_Integer, OCTextureFunction*>::iterator tf =
     texture_functions_.find( surface->DynamicType()->HashCode( IntegerLast() ) );
 
   OCTextureFunction* texture_function;
diff -urp lignumCAD.pld/octexturefunction.h lignumCAD.pld2/octexturefunction.h
--- lignumCAD/octexturefunction.h	2002-10-09 19:03:28.000000000 +0200
+++ lignumCAD.pld2/octexturefunction.h	2010-09-15 21:30:26.000000000 +0200
@@ -109,7 +109,7 @@ private:
   static OCTextureFactory* instance_;
 
   //! The available texture function objects.
-  map<Standard_Integer, OCTextureFunction*> texture_functions_;
+  std::map<Standard_Integer, OCTextureFunction*> texture_functions_;
 };
 
 #endif // OCTEXTUREFUNCTION_H
